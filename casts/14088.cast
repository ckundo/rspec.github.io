{"width":117,"version":2,"title":"","timestamp":1416447538,"height":13,"env":{"TERM":"xterm-256color","SHELL":"/usr/local/bin/zsh"},"duration":21.132115125656128}
[0.16,"o","\u001B[1m\u001B[7m%\u001B[27m\u001B[1m\u001B[0m                                                                                                                    \r \r\u001B]2;myron@Myron-Marstons-MacBook-Pro: ~/moz/plines\u0007\u001B]1;~/moz/plines\u0007"]
[0.18,"o","\r\u001B[0m\u001B[27m\u001B[24m\u001B[J\u001B[01;31m➜ \u001B[01;32m \u001B[36mplines \u001B[01;34mgit:(\u001B[31mrspec-3-upgrade\u001B[34m)\u001B[00m\u001B[01;34m \u001B[00m\u001B[K"]
[0.61,"o","t"]
[0.75,"o","\btr"]
[0.85,"o","a"]
[0.96,"o","n"]
[1.06,"o","s"]
[1.18,"o","p"]
[1.26,"o","e"]
[1.41,"o","c"]
[1.59,"o","\r\r\n"]
[1.60,"o","\u001B]2;transpec\u0007\u001B]1;transpec\u0007"]
[2.37,"o","Copying the project for dynamic analysis...\r\n"]
[6.38,"o","Running dynamic analysis with command \"bundle exec rspec\"...\r\n"]
[8.66,"o","Run options: include {:focus=>true}\r\n"]
[8.66,"o","\r\nAll examples were filtered out; ignoring {:focus=>true}\r\n"]
[8.68,"o","\u001B[32m.\u001B[0m"]
[8.70,"o","\u001B[32m.\u001B[0m"]
[8.72,"o","\u001B[32m.\u001B[0m"]
[8.72,"o","\u001B[32m.\u001B[0m"]
[8.72,"o","\u001B[32m.\u001B[0m"]
[8.73,"o","\u001B[32m.\u001B[0m"]
[8.74,"o","\u001B[32m.\u001B[0m"]
[8.74,"o","\u001B[32m.\u001B[0m"]
[8.74,"o","\u001B[32m.\u001B[0m"]
[8.74,"o","\u001B[32m.\u001B[0m"]
[8.75,"o","\u001B[32m.\u001B[0m"]
[8.75,"o","\u001B[32m.\u001B[0m"]
[8.75,"o","\u001B[32m.\u001B[0m"]
[8.75,"o","\u001B[32m.\u001B[0m"]
[8.75,"o","\u001B[32m.\u001B[0m"]
[8.75,"o","\u001B[32m.\u001B[0m"]
[8.76,"o","\u001B[32m.\u001B[0m"]
[8.76,"o","\u001B[32m.\u001B[0m"]
[8.76,"o","\u001B[32m.\u001B[0m"]
[8.76,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.77,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.78,"o","\u001B[32m.\u001B[0m"]
[8.79,"o","\u001B[32m.\u001B[0m"]
[8.79,"o","\u001B[32m.\u001B[0m"]
[8.79,"o","\u001B[32m.\u001B[0m"]
[8.79,"o","\u001B[32m.\u001B[0m"]
[8.80,"o","\u001B[32m.\u001B[0m"]
[8.81,"o","\u001B[32m.\u001B[0m"]
[8.81,"o","\u001B[32m.\u001B[0m"]
[8.82,"o","\u001B[32m.\u001B[0m"]
[8.83,"o","\u001B[32m.\u001B[0m"]
[8.83,"o","\u001B[32m.\u001B[0m"]
[8.83,"o","\u001B[32m.\u001B[0m"]
[8.83,"o","\u001B[32m.\u001B[0m"]
[8.83,"o","\u001B[32m.\u001B[0m"]
[8.84,"o","\u001B[32m.\u001B[0m"]
[8.84,"o","\u001B[32m.\u001B[0m"]
[8.84,"o","\u001B[32m.\u001B[0m"]
[8.84,"o","\u001B[32m.\u001B[0m"]
[8.84,"o","\u001B[32m.\u001B[0m"]
[8.84,"o","\u001B[32m.\u001B[0m"]
[8.84,"o","\u001B[32m.\u001B[0m"]
[8.85,"o","\u001B[32m.\u001B[0m"]
[8.85,"o","\u001B[32m.\u001B[0m"]
[8.85,"o","\u001B[32m.\u001B[0m"]
[8.85,"o","\u001B[32m.\u001B[0m"]
[8.86,"o","\u001B[32m.\u001B[0m"]
[8.86,"o","\u001B[32m.\u001B[0m"]
[8.86,"o","\u001B[32m.\u001B[0m"]
[8.86,"o","\u001B[32m.\u001B[0m"]
[8.87,"o","\u001B[32m.\u001B[0m"]
[8.87,"o","\u001B[32m.\u001B[0m"]
[8.87,"o","\u001B[32m.\u001B[0m"]
[8.87,"o","\u001B[32m.\u001B[0m"]
[8.88,"o","\u001B[32m.\u001B[0m"]
[8.88,"o","\u001B[32m.\u001B[0m"]
[8.88,"o","\u001B[32m.\u001B[0m"]
[8.88,"o","\u001B[32m.\u001B[0m"]
[8.89,"o","\u001B[32m.\u001B[0m"]
[8.89,"o","\u001B[32m.\u001B[0m"]
[8.89,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.90,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.91,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.92,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.93,"o","\u001B[32m.\u001B[0m"]
[8.94,"o","\u001B[32m.\u001B[0m"]
[8.95,"o","\u001B[32m.\u001B[0m"]
[8.95,"o","\u001B[32m.\u001B[0m"]
[8.95,"o","\u001B[32m.\u001B[0m"]
[8.96,"o","\u001B[32m.\u001B[0m"]
[8.97,"o","\u001B[32m.\u001B[0m"]
[8.97,"o","\u001B[32m.\u001B[0m"]
[8.97,"o","\u001B[32m.\u001B[0m"]
[8.99,"o","\u001B[32m.\u001B[0m"]
[8.99,"o","\u001B[32m.\u001B[0m"]
[8.99,"o","\u001B[32m.\u001B[0m"]
[8.99,"o","\u001B[32m.\u001B[0m"]
[9.00,"o","\u001B[32m.\u001B[0m"]
[9.00,"o","\u001B[32m.\u001B[0m"]
[9.01,"o","\u001B[32m.\u001B[0m"]
[9.01,"o","\u001B[32m.\u001B[0m"]
[9.02,"o","\u001B[32m.\u001B[0m"]
[9.02,"o","\u001B[32m.\u001B[0m"]
[9.03,"o","\u001B[32m.\u001B[0m"]
[9.03,"o","\u001B[32m.\u001B[0m"]
[9.03,"o","\u001B[32m.\u001B[0m"]
[9.04,"o","\u001B[32m.\u001B[0m"]
[9.04,"o","\u001B[32m.\u001B[0m"]
[9.04,"o","\u001B[32m.\u001B[0m"]
[9.04,"o","\u001B[32m.\u001B[0m"]
[9.04,"o","\u001B[32m.\u001B[0m"]
[9.04,"o","\u001B[32m.\u001B[0m"]
[9.05,"o","\u001B[32m.\u001B[0m"]
[9.05,"o","\u001B[32m.\u001B[0m"]
[9.06,"o","\u001B[32m.\u001B[0m"]
[9.07,"o","\u001B[32m.\u001B[0m"]
[9.07,"o","\u001B[32m.\u001B[0m"]
[9.08,"o","\u001B[32m.\u001B[0m"]
[9.08,"o","\u001B[32m.\u001B[0m"]
[9.09,"o","\u001B[32m.\u001B[0m"]
[9.10,"o","\u001B[32m.\u001B[0m"]
[9.11,"o","\u001B[32m.\u001B[0m"]
[9.12,"o","\u001B[32m.\u001B[0m"]
[9.12,"o","\u001B[32m.\u001B[0m"]
[9.12,"o","\u001B[32m.\u001B[0m"]
[9.13,"o","\u001B[32m.\u001B[0m"]
[9.13,"o","\u001B[32m.\u001B[0m"]
[9.13,"o","\u001B[32m.\u001B[0m"]
[9.13,"o","\u001B[32m.\u001B[0m"]
[9.13,"o","\u001B[32m.\u001B[0m"]
[9.14,"o","\u001B[32m.\u001B[0m"]
[9.14,"o","\u001B[32m.\u001B[0m"]
[9.14,"o","\u001B[32m.\u001B[0m"]
[9.14,"o","\u001B[32m.\u001B[0m"]
[9.15,"o","\u001B[32m.\u001B[0m"]
[9.15,"o","\u001B[32m.\u001B[0m"]
[9.15,"o","\u001B[32m.\u001B[0m"]
[9.15,"o","\u001B[32m.\u001B[0m"]
[9.15,"o","\u001B[32m.\u001B[0m"]
[9.16,"o","\u001B[32m.\u001B[0m"]
[9.16,"o","\u001B[32m.\u001B[0m"]
[9.16,"o","\u001B[32m.\u001B[0m"]
[9.17,"o","\u001B[32m.\u001B[0m"]
[9.17,"o","\u001B[32m.\u001B[0m"]
[9.17,"o","\u001B[32m.\u001B[0m"]
[9.17,"o","\u001B[32m.\u001B[0m"]
[9.18,"o","\u001B[32m.\u001B[0m"]
[9.18,"o","\u001B[32m.\u001B[0m"]
[9.18,"o","\u001B[32m.\u001B[0m"]
[9.18,"o","\u001B[32m.\u001B[0m"]
[9.19,"o","\u001B[32m.\u001B[0m"]
[9.19,"o","\u001B[32m.\u001B[0m"]
[9.20,"o","\u001B[32m.\u001B[0m"]
[9.20,"o","\u001B[32m.\u001B[0m"]
[9.20,"o","\u001B[32m.\u001B[0m"]
[9.21,"o","\u001B[32m.\u001B[0m"]
[9.22,"o","\u001B[32m.\u001B[0m"]
[9.24,"o","\u001B[32m.\u001B[0m"]
[9.25,"o","\u001B[32m.\u001B[0m"]
[9.26,"o","\u001B[32m.\u001B[0m"]
[9.26,"o","\u001B[32m.\u001B[0m"]
[9.26,"o","\u001B[32m.\u001B[0m"]
[9.27,"o","\u001B[32m.\u001B[0m"]
[9.27,"o","\u001B[32m.\u001B[0m"]
[9.27,"o","\u001B[32m.\u001B[0m"]
[9.27,"o","\u001B[32m.\u001B[0m"]
[9.28,"o","\u001B[32m.\u001B[0m"]
[9.28,"o","\u001B[32m.\u001B[0m"]
[9.29,"o","\u001B[32m.\u001B[0m"]
[9.30,"o","\u001B[32m.\u001B[0m"]
[9.31,"o","\u001B[32m.\u001B[0m"]
[9.32,"o","\u001B[32m.\u001B[0m"]
[9.32,"o","\u001B[32m.\u001B[0m"]
[9.33,"o","\u001B[32m.\u001B[0m"]
[9.33,"o","\u001B[32m.\u001B[0m"]
[9.34,"o","\u001B[32m.\u001B[0m"]
[9.35,"o","\u001B[32m.\u001B[0m"]
[9.35,"o","\u001B[32m.\u001B[0m"]
[9.35,"o","\u001B[32m.\u001B[0m"]
[9.35,"o","\u001B[32m.\u001B[0m"]
[9.36,"o","\u001B[32m.\u001B[0m"]
[9.36,"o","\u001B[32m.\u001B[0m"]
[9.36,"o","\u001B[32m.\u001B[0m"]
[9.37,"o","\u001B[32m.\u001B[0m"]
[9.38,"o","\u001B[32m.\u001B[0m"]
[9.38,"o","\u001B[32m.\u001B[0m"]
[9.39,"o","\u001B[32m.\u001B[0m"]
[9.40,"o","\u001B[32m.\u001B[0m"]
[9.41,"o","\u001B[32m.\u001B[0m"]
[9.42,"o","\u001B[32m.\u001B[0m"]
[9.43,"o","\u001B[32m.\u001B[0m"]
[9.43,"o","\u001B[32m.\u001B[0m"]
[9.44,"o","\u001B[32m.\u001B[0m"]
[9.45,"o","\u001B[32m.\u001B[0m"]
[9.46,"o","\u001B[32m.\u001B[0m"]
[9.46,"o","\u001B[32m.\u001B[0m"]
[9.47,"o","\u001B[32m.\u001B[0m"]
[9.48,"o","\u001B[32m.\u001B[0m"]
[9.49,"o","\u001B[32m.\u001B[0m"]
[9.50,"o","\u001B[32m.\u001B[0m"]
[9.50,"o","\u001B[32m.\u001B[0m"]
[9.51,"o","\u001B[32m.\u001B[0m"]
[9.52,"o","\u001B[32m.\u001B[0m"]
[9.52,"o","\u001B[32m.\u001B[0m"]
[9.53,"o","\u001B[32m.\u001B[0m"]
[9.54,"o","\u001B[32m.\u001B[0m"]
[9.55,"o","\u001B[32m.\u001B[0m"]
[9.56,"o","\u001B[32m.\u001B[0m"]
[9.57,"o","\u001B[32m.\u001B[0m"]
[9.58,"o","\u001B[32m.\u001B[0m"]
[9.58,"o","\u001B[32m.\u001B[0m"]
[9.61,"o","\u001B[32m.\u001B[0m"]
[9.62,"o","\u001B[32m.\u001B[0m"]
[9.62,"o","\u001B[32m.\u001B[0m"]
[9.62,"o","\u001B[32m.\u001B[0m"]
[9.62,"o","\u001B[32m.\u001B[0m"]
[9.63,"o","\u001B[32m.\u001B[0m"]
[9.63,"o","\u001B[32m.\u001B[0m"]
[9.63,"o","\u001B[32m.\u001B[0m"]
[9.64,"o","\u001B[32m.\u001B[0m"]
[9.64,"o","\u001B[32m.\u001B[0m"]
[9.64,"o","\u001B[32m.\u001B[0m"]
[9.65,"o","\u001B[32m.\u001B[0m"]
[9.65,"o","\u001B[32m.\u001B[0m"]
[9.65,"o","\u001B[32m.\u001B[0m"]
[9.65,"o","\u001B[32m.\u001B[0m"]
[9.66,"o","\u001B[32m.\u001B[0m"]
[9.66,"o","\u001B[32m.\u001B[0m"]
[9.66,"o","\u001B[32m.\u001B[0m"]
[9.66,"o","\u001B[32m.\u001B[0m"]
[9.66,"o","\u001B[32m.\u001B[0m"]
[9.67,"o","\u001B[32m.\u001B[0m"]
[9.67,"o","\u001B[32m.\u001B[0m"]
[9.67,"o","\u001B[32m.\u001B[0m"]
[9.67,"o","\u001B[32m.\u001B[0m"]
[9.67,"o","\u001B[32m.\u001B[0m"]
[9.68,"o","\u001B[32m.\u001B[0m"]
[9.68,"o","\u001B[32m.\u001B[0m"]
[9.69,"o","\u001B[32m.\u001B[0m"]
[9.70,"o","\u001B[32m.\u001B[0m"]
[9.70,"o","\u001B[32m.\u001B[0m"]
[9.70,"o","\u001B[32m.\u001B[0m"]
[9.71,"o","\u001B[32m.\u001B[0m"]
[9.71,"o","\r\n\r\nDeprecation Warnings:\r\n\r\n"]
[9.71,"o","Using a matcher in a block expectation expression (e.g. `expect { }.to matcher`) that does not implement `supports_block_expectations?` is deprecated. Use a value expectation expression (e.g. `expect(value).to matcher`) or implement `supports_block_expectations?` on the provided matcher (move job ec21897233484335947d0841e55f9ba0 to plines) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/integration/plines/external_dependencies_spec.rb:70:in `block (2 levels) in <module:Plines>'.\r\n"]
[9.71,"o","Using a matcher in a block expectation expression (e.g. `expect { }.to matcher`) that does not implement `supports_block_expectations?` is deprecated. Use a value expectation expression (e.g. `expect(value).to matcher`) or implement `supports_block_expectations?` on the provided matcher (move job ed707b60c56343afa82fe69e66392eef) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/integration/plines/external_dependencies_spec.rb:89:in `block (2 levels) in <module:Plines>'.\r\nUsing a matcher in a block expectation expression (e.g. `expect { }.to matcher`) that does not implement `supports_block_expectations?` is deprecated. Use a value expectation expression (e.g. `expect(value).to matcher`) or implement `supports_block_expectations?` on the provided matcher (move job 1932398a2b5445d9ae30d1376d5bfa36) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/integration/plines/external_dependencie"]
[9.71,"o","s_spec.rb:25:in `block (3 levels) in <module:Plines>'.\r\nToo many uses of deprecated 'Using a matcher in a block expectation expression (e.g. `expect { }.to matcher`) that does not implement `supports_block_expectations?`'. Pass `--deprecation-out` or set `config.deprecation_stream` to a file for full output.\r\n\r\n`be_false` is deprecated. Use `be_falsey` (for Ruby's conditional semantics) or `be false` (for exact `== false` equality) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/step_spec.rb:170:in `block (3 levels) in <module:Plines>'.\r\n`be_false` is deprecated. Use `be_falsey` (for Ruby's conditional semantics) or `be false` (for exact `== false` equality) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/step_spec.rb:185:in `block (4 levels) in <module:Plines>'.\r\n`be_false` is deprecated. Use `be_falsey` (for Ruby's conditional semantics) or `be false` (for"]
[9.71,"o"," exact `== false` equality) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/enqueued_job_spec.rb:131:in `block (4 levels) in <module:Plines>'.\r\nToo many uses of deprecated '`be_false`'. Pass `--deprecation-out` or set `config.deprecation_stream` to a file for full output.\r\n\r\n`be_true` is deprecated. Use `be_truthy` (for Ruby's conditional semantics) or `be true` (for exact `== true` equality) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/pipeline_spec.rb:88:in `block (4 levels) in <module:Plines>'.\r\n`be_true` is deprecated. Use `be_truthy` (for Ruby's conditional semantics) or `be true` (for exact `== true` equality) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/step_spec.rb:535:in `block (5 levels) in <module:Plines>'.\r\n`be_true` is deprecated. Use `be_truthy` (for Ruby's condi"]
[9.71,"o","tional semantics) or `be true` (for exact `== true` equality) instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/step_spec.rb:165:in `block (3 levels) in <module:Plines>'.\r\nToo many uses of deprecated '`be_true`'. Pass `--deprecation-out` or set `config.deprecation_stream` to a file for full output.\r\n\r\n`expect(collection_owner).to have(3).entries` is deprecated. Use the rspec-collection_matchers gem or replace your expectation with something like `expect(collection_owner.entries.size).to eq(3)` instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/enqueued_job_spec.rb:85:in `block (3 levels) in <module:Plines>'.\r\n`expect(collection).to have(1).entry` is deprecated. Use the rspec-collection_matchers gem or replace your expectation with something like `expect(collection.size).to eq(1)` instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141"]
[9.71,"o","119-97544-hs9vaj/plines/spec/unit/plines/enqueued_job_spec.rb:86:in `block (3 levels) in <module:Plines>'.\r\n`expect(collection).to have(1).entry` is deprecated. Use the rspec-collection_matchers gem or replace your expectation with something like `expect(collection.size).to eq(1)` instead. Called from /private/var/folders/yr/htlz0whj08zd30xczq0v_ps40000gq/T/d20141119-97544-hs9vaj/plines/spec/unit/plines/enqueued_job_spec.rb:87:in `block (3 levels) in <module:Plines>'.\r\nToo many uses of deprecated 'the have matcher'. Pass `--deprecation-out` or set `config.deprecation_stream` to a file for full output.\r\n\r\n\r\nIf you need more of the backtrace for any of these deprecations to\r\nidentify where to make the necessary changes, you can configure\r\n`config.raise_errors_for_deprecations!`, and it will turn the\r\ndeprecation warnings into errors, giving you the full backtrace.\r\n\r\n49 deprecation warnings total\r\n\r\nFinished in 1.04 seconds\r\n\u001B[32m283 examples, 0 failures\u001B[0m\r\n"]
[9.71,"o","\r\nRandomized with seed 45403\r\n\r\n"]
[10.41,"o","\r\nGathering the spec suite data...\r\n"]
[12.07,"o","\r\nConverting spec/integration/plines/external_dependencies_spec.rb\r\n"]
[12.09,"o","Converting spec/integration/plines/step_spec.rb\r\n"]
[12.10,"o","Converting spec/simplecov_setup.rb\r\n"]
[12.10,"o","Converting spec/spec_helper.rb\r\n"]
[12.12,"o","Converting spec/unit/plines/configuration_spec.rb\r\n"]
[12.14,"o","Converting spec/unit/plines/dependency_graph_spec.rb\r\n"]
[12.21,"o","Converting spec/unit/plines/dynamic_struct_spec.rb\r\n"]
[12.23,"o","Converting spec/unit/plines/enqueued_job_spec.rb\r\n"]
[12.29,"o","Converting spec/unit/plines/external_dependency_timeout_spec.rb\r\n"]
[12.30,"o","Converting spec/unit/plines/indifferent_hash_spec.rb\r\n"]
[12.36,"o","Converting spec/unit/plines/job_batch_list_spec.rb\r\n"]
[12.39,"o","Converting spec/unit/plines/job_batch_spec.rb\r\n"]
[12.64,"o","Converting spec/unit/plines/job_enqueuer_spec.rb\r\n"]
[12.70,"o","Converting spec/unit/plines/job_spec.rb\r\n"]
[12.75,"o","Converting spec/unit/plines/pipeline_spec.rb\r\n"]
[12.80,"o","Converting spec/unit/plines/redis_objects_spec.rb\r\n"]
[12.83,"o","Converting spec/unit/plines/step_spec.rb\r\n"]
[12.98,"o","\r\nSummary:\r\n\r\n"]
[12.98,"o","\u001B[36m14 conversions\u001B[0m\r\n\u001B[36m  from: \u001B[0mobj.should_receive(:message)\r\n\u001B[36m    to: \u001B[0mexpect(obj).to receive(:message)\r\n\u001B[36m13 conversions\u001B[0m\r\n\u001B[36m  from: \u001B[0mbe_true\r\n\u001B[36m    to: \u001B[0mbe_truthy\r\n\u001B[36m12 conversions\u001B[0m\r\n\u001B[36m  from: \u001B[0mexpect(collection).to have(n).items\r\n\u001B[36m    to: \u001B[0mexpect(collection.size).to eq(n)\r\n\u001B[36m10 conversions\u001B[0m\r\n\u001B[36m  from: \u001B[0mobj.stub(:message)\r\n\u001B[36m    to: \u001B[0mallow(obj).to receive(:message)\r\n\u001B[36m7 conversions\u001B[0m\r\n\u001B[36m  from: \u001B[0mbe_false\r\n\u001B[36m    to: \u001B[0mbe_falsey\r\n\u001B[36m3 conversions\u001B[0m\r\n\u001B[36m  from: \u001B[0mobj.should_not_receive(:message)\r\n\u001B[36m    to: \u001B[0mexpect(obj).not_to receive(:message)\r\n\u001B[36m2 conversions\u001B[0m\r\n\u001B[36m  from: \u001B[0mexpect(obj).to have(n).entries\r\n\u001B[36m    to: \u001B[0mexpect(obj.entries.size).to eq(n)\r\n\u001B[36m1 conversion\u001B[0m\r\n\u001B[36m  from: \u001B[0mKlass.any_instance.stub(:message)\r\n\u001B[36m    to: \u001B[0mallow_any_instance_of(Klass).to receive(:message)\r\n\r\n"]
[12.98,"o","\u001B[32m62 conversions, 0 incompletes, 0 warnings, \u001B[0m\u001B[32m0 errors\u001B[0m\r\n"]
[13.00,"o","\r\n"]
[13.00,"o","\u001B[36mA commit message that describes the conversion summary was generated to\u001B[0m\r\n"]
[13.00,"o","\u001B[36m.git/COMMIT_EDITMSG. To use the message, type the following command for\u001B[0m\r\n"]
[13.00,"o","\u001B[36mthe next commit:\u001B[0m\r\n    git commit -aeF .git/COMMIT_EDITMSG\r\n"]
[13.00,"o","\r\n"]
[13.00,"o","Done! Now run \u001B[1mrspec\u001B[0m and check if everything is green.\r\n"]
[13.05,"o","\u001B[1m\u001B[7m%\u001B[27m\u001B[1m\u001B[0m                                                                                                                    \r \r"]
[13.05,"o","\u001B]2;myron@Myron-Marstons-MacBook-Pro: ~/moz/plines\u0007"]
[13.05,"o","\u001B]1;~/moz/plines\u0007"]
[13.06,"o","\r\u001B[0m\u001B[27m\u001B[24m\u001B[J\u001B[01;31m➜ \u001B[01;32m \u001B[36mplines \u001B[01;34mgit:(\u001B[31mrspec-3-upgrade\u001B[34m) \u001B[33m✗\u001B[00m\u001B[00m\u001B[01;34m \u001B[00m\u001B[K"]
[13.82,"o","g"]
[13.99,"o","\bgi"]
[14.12,"o","t"]
[14.21,"o"," "]
[14.34,"o","d"]
[14.45,"o","i"]
[14.58,"o","f"]
[14.67,"o","f"]
[15.17,"o","\r\r\n"]
[15.17,"o","\u001B]2;git diff\u0007\u001B]1;git\u0007"]
[15.18,"o","\u001B[?1049h\u001B[?1h\u001B="]
[15.18,"o","\u001B[1mdiff --git a/spec/unit/plines/dependency_graph_spec.rb b/spec/unit/plines/dependency_graph_spec.rb\u001B[m\u001B[m\r\n\u001B[1mindex c9c5342..2ca21e7 100644\u001B[m\u001B[m\r\n\u001B[1m--- a/spec/unit/plines/dependency_graph_spec.rb\u001B[m\u001B[m\r\n\u001B[1m+++ b/spec/unit/plines/dependency_graph_spec.rb\u001B[m\u001B[m\r\n\u001B[36m@@ -211,7 +211,7 @@\u001B[m \u001B[mmodule Plines\u001B[m\u001B[m\r\n         end\u001B[m\u001B[m\r\n \u001B[m\u001B[m\r\n         it 'prints a warning when inferring the transitive dependencies' do\u001B[m\u001B[m\r\n\u001B[31m-          logger.should_receive(:warn).with(/transitive dependency/i)\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m          expect(logger).to receive(:warn).with(/transitive dependency/i)\u001B[m\u001B[m\r\n           graph.steps\u001B[m\u001B[m\r\n         end\u001B[m\u001B[m\r\n:\u001B[K"]
[16.49,"o","\r\u001B[K"]
[16.49,"o","       end\u001B[m\u001B[m\r\n\u001B[1mdiff --git a/spec/unit/plines/dynamic_struct_spec.rb b/spec/unit/plines/dynamic_struct_spec.rb\u001B[m\u001B[m\r\n\u001B[1mindex 439ae22..d4866f5 100644\u001B[m\u001B[m\r\n\u001B[1m--- a/spec/unit/plines/dynamic_struct_spec.rb\u001B[m\u001B[m\r\n\u001B[1m+++ b/spec/unit/plines/dynamic_struct_spec.rb\u001B[m\u001B[m\r\n\u001B[36m@@ -11,8 +11,8 @@\u001B[m \u001B[mmodule Plines\u001B[m\u001B[m\r\n \u001B[m\u001B[m\r\n     it 'provides predicates' do\u001B[m\u001B[m\r\n       ds = DynamicStruct.new(\"a\" => 3, \"b\" => false)\u001B[m\u001B[m\r\n\u001B[31m-      expect(ds.a?).to be_true\u001B[m\u001B[m\r\n\u001B[31m-      expect(ds.b?).to be_false\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m      expect(ds.a?).to be_truthy\u001B[m\u001B[m\r\n:\u001B[K"]
[17.32,"o","\r\u001B[K"]
[17.32,"o","\u001B[32m+\u001B[m\u001B[32m      expect(ds.b?).to be_falsey\u001B[m\u001B[m\r\n     end\u001B[m\u001B[m\r\n \u001B[m\u001B[m\r\n     it 'raises a NoMethodError for messages that are not in the hash' do\u001B[m\u001B[m\r\n\u001B[1mdiff --git a/spec/unit/plines/enqueued_job_spec.rb b/spec/unit/plines/enqueued_job_spec.rb\u001B[m\u001B[m\r\n\u001B[1mindex 89a39f7..e5f09dd 100644\u001B[m\u001B[m\r\n\u001B[1m--- a/spec/unit/plines/enqueued_job_spec.rb\u001B[m\u001B[m\r\n\u001B[1m+++ b/spec/unit/plines/enqueued_job_spec.rb\u001B[m\u001B[m\r\n\u001B[36m@@ -82,10 +82,10 @@\u001B[m \u001B[mmodule Plines\u001B[m\u001B[m\r\n         job.timeout_external_dependency(\"bar\")\u001B[m\u001B[m\r\n \u001B[m\u001B[m\r\n         keys = job.declared_redis_object_keys\u001B[m\u001B[m\r\n:\u001B[K"]
[18.23,"o","\r\u001B[K"]
[18.23,"o","\u001B[31m-        expect(keys).to have(3).entries\u001B[m\u001B[m\r\n\u001B[31m-        expect(keys.grep(/pending/)).to have(1).entry\u001B[m\u001B[m\r\n\u001B[31m-        expect(keys.grep(/resolved/)).to have(1).entry\u001B[m\u001B[m\r\n\u001B[31m-        expect(keys.grep(/timed_out/)).to have(1).entry\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m        expect(keys.entries.size).to eq(3)\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m        expect(keys.grep(/pending/).size).to eq(1)\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m        expect(keys.grep(/resolved/).size).to eq(1)\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m        expect(keys.grep(/timed_out/).size).to eq(1)\u001B[m\u001B[m\r\n \u001B[m\u001B[m\r\n         expect(job.redis.keys).to include(*keys)\u001B[m\u001B[m\r\n       end\u001B[m\u001B[m\r\n\u001B[36m@@ -128,7 +128,7 @@\u001B[m \u001B[mmodule Plines\u001B[m\u001B[m\r\n:\u001B[K"]
[19.06,"o","\r\u001B[K"]
[19.06,"o","           EnqueuedJob.create(qless, pipeline_module, jid)\u001B[m\u001B[m\r\n           ej = EnqueuedJob.new(qless, pipeline_module, jid)\u001B[m\u001B[m\r\n           expect { ej.send(meth, \"bazz\") { yielded = true } }.to raise_error(ArgumentError)\u001B[m\u001B[m\r\n\u001B[31m-          expect(yielded).to be_false\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m          expect(yielded).to be_falsey\u001B[m\u001B[m\r\n         end\u001B[m\u001B[m\r\n       end\u001B[m\u001B[m\r\n     end\u001B[m\u001B[m\r\n\u001B[1mdiff --git a/spec/unit/plines/external_dependency_timeout_spec.rb b/spec/unit/plines/external_dependency_timeout_spec\u001B[m\u001B[1m.rb\u001B[m\u001B[m\r\n\u001B[1mindex 9a1ba19..91b923c 100644\u001B[m\u001B[m\r\n\u001B[1m--- a/spec/unit/plines/external_dependency_timeout_spec.rb\u001B[m\u001B[m\r\n:\u001B[K"]
[19.87,"o","\r\u001B[K"]
[19.87,"o","\u001B[1m+++ b/spec/unit/plines/external_dependency_timeout_spec.rb\u001B[m\u001B[m\r\n\u001B[36m@@ -14,9 +14,9 @@\u001B[m \u001B[mmodule Plines\u001B[m\u001B[m\r\n       data = ExternalDependencyTimeout.job_data_for(job_batch, \"foo\", [\"a\", \"b\"])\u001B[m\u001B[m\r\n       job.stub(data: data)\u001B[m\u001B[m\r\n \u001B[m\u001B[m\r\n\u001B[31m-      Plines::JobBatch.stub(:find).with(qless_client, job_batch.pipeline, job_batch.id) { job_batch }\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m      allow(Plines::JobBatch).to receive(:find).with(qless_client, job_batch.pipeline, job_batch.id) { job_batch }\u001B[m\u001B[m\r\n       expect(job_batch).to respond_to(:timeout_external_dependency).with(2).arguments\u001B[m\u001B[m\r\n\u001B[31m-      job_batch.should_receive(:timeout_external_dependency).with(\"foo\", [\"a\", \"b\"])\u001B[m\u001B[m\r\n\u001B[32m+\u001B[m\u001B[32m      expect(job_batch).to receive(:timeout_external_dependency).with(\"foo\", [\"a\", \"b\"])\u001B[m\u001B[m\r\n \u001B[m\u001B[m\r\n       ExternalDependencyTimeout.perform(job)\u001B[m\u001B[m\r\n:\u001B[K"]
[20.50,"o","\r\u001B[K\u001B[?1l\u001B>\u001B[?1049l"]
[20.50,"o","\u001B[1m\u001B[7m%\u001B[27m\u001B[1m\u001B[0m                                                                                                                    \r \r"]
[20.50,"o","\u001B]2;myron@Myron-Marstons-MacBook-Pro: ~/moz/plines\u0007"]
[20.50,"o","\u001B]1;~/moz/plines\u0007"]
[20.51,"o","\r\u001B[0m\u001B[27m\u001B[24m\u001B[J\u001B[01;31m➜ \u001B[01;32m \u001B[36mplines \u001B[01;34mgit:(\u001B[31mrspec-3-upgrade\u001B[34m) \u001B[33m✗\u001B[00m\u001B[00m\u001B[01;34m \u001B[00m\u001B[K"]
[21.10,"o","\r\r\n"]
