<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RSpec</title>
  <subtitle>The Official RSpec Blog</subtitle>
  <id>http://rspec.info/blog</id>
  <link href="http://rspec.info/blog"/>
  <link href="http://rspec.info/blog/feed.xml" rel="self"/>
  <updated>2020-06-22T00:00:00Z</updated>
  <author>
    <name>The RSpec Core Team</name>
  </author>
  <entry>
    <title>RSpec Branching Strategy</title>
    <link rel="alternate" href="http://rspec.info/blog/2020/06/rspec-branching-strategy/"/>
    <id>http://rspec.info/blog/2020/06/rspec-branching-strategy/</id>
    <published>2020-06-22T00:00:00Z</published>
    <updated>2020-06-22T10:15:31+01:00</updated>
    <author>
      <name>Jon Rowe</name>
    </author>
    <content type="html">&lt;h1 id="the-short-version"&gt;The short version&lt;/h1&gt;

&lt;p&gt;RSpec repositories will deprecate the use of &lt;code&gt;master&lt;/code&gt; for the default branch
name. We will wait for a consensus on the new name for the default branch,
in particular what new default is chosen by Github.&lt;/p&gt;

&lt;p&gt;If no other consensus is arrived at by 1st of August, &lt;code&gt;master&lt;/code&gt; will be
renamed &lt;code&gt;main&lt;/code&gt;. At that point all development effort will be based off
the new branch name, and use of &lt;code&gt;master&lt;/code&gt; will illicit a warning on install
/ usage. All open PRs will be rebased.&lt;/p&gt;

&lt;h1 id="the-long-version"&gt;The long version&lt;/h1&gt;

&lt;p&gt;RSpec's source code is hosted on Github. By default git, and thus Github has
historically used &lt;code&gt;master&lt;/code&gt; as the name of the default, or main branch. This
term has sat uneasily on the minds of the team and with the recent community
led moves to eliminate this terminology from our technology stacks, we are going
to follow suit and rename this branch.&lt;/p&gt;

&lt;p&gt;We currently favour &lt;code&gt;main&lt;/code&gt; as the new name (it has shared muscle memory with
the old) but we also recognise that having community consensus around a
default name is important as it reduces the amount of surprise encountered by
developers. So we will wait for the community to settle on a new default name,
in particular for Github to change their default, but if none has been
announced by 1st August we will use &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We already have other branches in use for stable versions (e.g.
&lt;code&gt;3-9-maintenance&lt;/code&gt;) and they will be unaffected.&lt;/p&gt;

&lt;p&gt;Some people will believe this is an inconvience because &lt;code&gt;master&lt;/code&gt; is used for
lots of things, but the term has its origins in the dominance of one person
over another, in particular in slavery and this change is about being
inclusive to all people.&lt;/p&gt;

&lt;h2 id="implications"&gt;Implications&lt;/h2&gt;

&lt;p&gt;We have always encouraged the use of our main branch for getting pre-release
features before we release them as a group of gems, this means there are likely
people using the &lt;code&gt;master&lt;/code&gt; branch via their Gemfiles. We will deprecate
&lt;code&gt;master&lt;/code&gt; by means of notice in the documentation, and possibly a post install
/ on usage message from RSpec itself warning of the fact the branch will
become stale and not be updated further. Additionally we will look at
using branch protection rules preventing PRs against &lt;code&gt;master&lt;/code&gt; from that date.&lt;/p&gt;

&lt;h2 id="steps-we-intend-to-take"&gt;Steps we intend to take&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Push &lt;code&gt;master&lt;/code&gt; to &lt;code&gt;main&lt;/code&gt; (or other new branch name).&lt;/li&gt;
  &lt;li&gt;Rebase all open PRs and update our builds.&lt;/li&gt;
  &lt;li&gt;Set the default to &lt;code&gt;main&lt;/code&gt; (etc) for all RSpec repositories.&lt;/li&gt;
  &lt;li&gt;Push change deprecating &lt;code&gt;master&lt;/code&gt; to &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;In the future (possibly when releasing RSpec 4) remove &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>RSpec Rails 4.0 has been released!</title>
    <link rel="alternate" href="http://rspec.info/blog/2020/05/rspec-rails-4-0-has-been-released/"/>
    <id>http://rspec.info/blog/2020/05/rspec-rails-4-0-has-been-released/</id>
    <published>2020-05-27T00:00:00Z</published>
    <updated>2020-05-27T16:04:15+01:00</updated>
    <author>
      <name>Benoit Tigeot, Jon Rowe and Phil Pirozhkov</name>
    </author>
    <content type="html">&lt;p&gt;RSpec Rails 4.0 has been released! Given our commitment to
&lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt;, this is a major release and as such
contains breaking changes. The major change is that we've dropped support for
Rails below 5, with only soft support for Rails 4.2.&lt;/p&gt;

&lt;p&gt;As usual, if you notice any newly introduced bugs, please let us know,
and we'll release a fix for it ASAP.&lt;/p&gt;

&lt;p&gt;RSpec continues to be a community-driven project with contributors
from all over the world. This release includes 258 commits and 56
merged pull requests from 27 different contributors!&lt;/p&gt;

&lt;p&gt;Thank you to everyone who helped make this release happen!&lt;/p&gt;

&lt;h2 id="notable-changes"&gt;Notable Changes&lt;/h2&gt;

&lt;p&gt;Support for Rails 6, including support for testing ActionCable, ActiveMailbox.&lt;/p&gt;

&lt;h3 id="breaking-changes"&gt;Breaking changes&lt;/h3&gt;

&lt;p&gt;RSpec Rails 4 only supports Rails 5 and 6. This is in line with our
new versioning policy which keeps major versions of RSpec Rails in
lockstep with supported versions of Rails.&lt;/p&gt;

&lt;p&gt;This means that we no longer support versions of Ruby below 2.2
in line with the versions of Ruby supported by Rails 5.&lt;/p&gt;

&lt;p&gt;We have restricted the version of Rails for this version to 4.2 to
allows a "soft support" for Rails 4.2 during this interim
period but we strongly urge you to upgrade Rails to use 4.0.0.&lt;/p&gt;

&lt;h3 id="removed-version-lock-with-rspec-gems"&gt;Removed version lock with RSpec gems&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;rspec-rails&lt;/code&gt; gem is no longer locked with the versioning of the other
RSpec gems, we will now be releasing &lt;code&gt;rspec-rails&lt;/code&gt; with each new Rails
release, keeping in lockstep with their supported major versions.&lt;/p&gt;

&lt;h3 id="improved-jruby-support"&gt;Improved JRuby support&lt;/h3&gt;

&lt;p&gt;We have improved JRuby support and RSpec Rails 4 fully supports JRuby on Rails 5 and 6.&lt;/p&gt;

&lt;h3 id="support-for-action-cable"&gt;Support for Action Cable&lt;/h3&gt;

&lt;p&gt;We now support &lt;a href="https://relishapp.com/rspec/rspec-rails/v/4-0/docs/channel-specs"&gt;channel specs&lt;/a&gt; in order to easily test your Action Cable channels.
A &lt;code&gt;channel spec&lt;/code&gt; pulls in &lt;code&gt;ActionCable::Channel::TestCase&lt;/code&gt;, including all of the
behavior and assertions that it provides, in addition to RSpec's own behavior and
expectations.&lt;/p&gt;

&lt;h3 id="support-for-action-mailbox"&gt;Support for Action Mailbox&lt;/h3&gt;

&lt;p&gt;Rails 6 adds &lt;a href="https://guides.rubyonrails.org/action_mailbox_basics.html"&gt;Action Mailbox&lt;/a&gt; for dealing with inbound emails.
RSpec Rails 4 adds support for &lt;a href="https://relishapp.com/rspec/rspec-rails/docs/mailbox-specs/action-mailbox-spec"&gt;mailbox specs&lt;/a&gt; using the Rails
test helpers for mailboxes.&lt;/p&gt;

&lt;p&gt;For example using the Rails test helper, &lt;code&gt;process&lt;/code&gt; and the &lt;code&gt;have_been_delivered&lt;/code&gt; matcher:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;InboxMailbox&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :mailbox&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s2"&gt;"marks email as delivered when number tag in subject is valid"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="s2"&gt;"replies@example.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;subject: &lt;/span&gt;&lt;span class="s2"&gt;"[141982763] support ticket"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mail_processed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mail_processed&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_been_delivered&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="improvements-to-generators"&gt;Improvements to generators&lt;/h3&gt;

&lt;p&gt;If you use generators, there are some improvements:
- The default hash syntax is now the Ruby 1.9 style in generated files to match Rails conventions
- Request specs are generated instead of controller specs by default
- New &lt;a href="https://relishapp.com/rspec/rspec-rails/v/4-0/docs/generators"&gt;generators&lt;/a&gt; available (channel, generator, mailbox…)&lt;/p&gt;

&lt;h3 id="allow-configuring-active-job-queueadapter-in-system-specs"&gt;Allow configuring Active Job &lt;code&gt;queue_adapter&lt;/code&gt; in system specs&lt;/h3&gt;

&lt;p&gt;Some people want to run Active Job with a specific queue adapter. In system
specs you can now choose your desired queue adapter:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;ActiveJob&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;queue_adapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:inline&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="silence-log-output-with-puma"&gt;Silence log output with Puma&lt;/h3&gt;

&lt;p&gt;By default, Puma will no longer print logs when running system specs.&lt;/p&gt;

&lt;h3 id="ability-to-manually-turn-off-active-record-support"&gt;Ability to manually turn off Active Record support&lt;/h3&gt;

&lt;p&gt;When using Rails without ActiveRecord or using an alternative ORM
or a database of choice, e.g. Sequel, ROM, Mongoid etc. We can
mistakenly detect ActiveRecord as being used due to other gems
autoloading the constants, we now support manually turning off
Active Record support when not configured with:
&lt;code&gt;config.use_active_record = false&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="stats"&gt;Stats:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 285&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 63&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;31 contributors&lt;/strong&gt;: Andrew White, Anton Rieder, Benoit Tigeot, Jon Rowe,
David Revelo, Giovanni Kock Bonetti, Ignatius Reza, James Dabbs, Joel AZEMAR,
John Hawthorn, Jonathan Rochkind, Kieran O'Grady, Marc-André Lafortune,
Moshe Kamensky, OKURA Masafumi, Olle Jonsson, Pedro Paiva, Penelope Phippen,
Phil Pirozhkov, Piotr W, Seb Jacobs, Tanbir Hasan, Viacheslav Bobrov,
Vladimir Dementyev, Xavier Shay, alpaca-tc, pavel, ta1kt0me, yalab&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="docs"&gt;Docs&lt;/h2&gt;

&lt;h3 id="api-docs"&gt;API Docs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="/documentation/4.0/rspec-rails/"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="cucumber-features"&gt;Cucumber Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://relishapp.com/rspec/rspec-rails/v/4-0/"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="release-notes"&gt;Release Notes&lt;/h2&gt;

&lt;h3 id="section"&gt;4.0.1 / 2020-05-16&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/rspec/rspec-rails/compare/v4.0.0...v4.0.1"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove warning when calling &lt;code&gt;driven_by&lt;/code&gt; in system specs. (Aubin Lorieux, #2302)&lt;/li&gt;
  &lt;li&gt;Fix comparison of times for &lt;code&gt;#at&lt;/code&gt; in job matchers. (Jon Rowe, Markus Doits, #2304)&lt;/li&gt;
  &lt;li&gt;Allow &lt;code&gt;have_enqueued_mail&lt;/code&gt; to match when a sub class of &lt;code&gt;ActionMailer::DeliveryJob&lt;/code&gt;
is set using &lt;code&gt;&amp;lt;Class&amp;gt;.delivery_job=&lt;/code&gt;. (Atsushi Yoshida #2305)&lt;/li&gt;
  &lt;li&gt;Restore Ruby 2.2.x compatibility. (Jon Rowe, #2332)&lt;/li&gt;
  &lt;li&gt;Add &lt;code&gt;required_ruby_version&lt;/code&gt; to gem spec. (Marc-André Lafortune, #2319, #2338)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-1"&gt;4.0.0 / 2020-03-24&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/rspec/rspec-rails/compare/v3.9.1...v4.0.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adds support for Rails 6. (Penelope Phippen, Benoit Tigeot, Jon Rowe, #2071)&lt;/li&gt;
  &lt;li&gt;Adds support for JRuby on Rails 5.2 and 6&lt;/li&gt;
  &lt;li&gt;Add support for parameterised mailers (Ignatius Reza, #2125)&lt;/li&gt;
  &lt;li&gt;Add ActionMailbox spec helpers and test type (James Dabbs, #2119)&lt;/li&gt;
  &lt;li&gt;Add ActionCable spec helpers and test type (Vladimir Dementyev, #2113)&lt;/li&gt;
  &lt;li&gt;Add support for partial args when using &lt;code&gt;have_enqueued_mail&lt;/code&gt;
(Ignatius Reza, #2118, #2125)&lt;/li&gt;
  &lt;li&gt;Add support for time arguments for &lt;code&gt;have_enqueued_job&lt;/code&gt; (@alpaca-tc, #2157)&lt;/li&gt;
  &lt;li&gt;Improve path parsing in view specs render options. (John Hawthorn, #2115)&lt;/li&gt;
  &lt;li&gt;Add routing spec template as an option for generating controller specs.
(David Revelo, #2134)&lt;/li&gt;
  &lt;li&gt;Add argument matcher support to &lt;code&gt;have_enqueued_*&lt;/code&gt; matchers. (Phil Pirozhkov, #2206)&lt;/li&gt;
  &lt;li&gt;Switch generated templates to use ruby 1.9 hash keys. (Tanbir Hasan, #2224)&lt;/li&gt;
  &lt;li&gt;Add &lt;code&gt;have_been_performed&lt;/code&gt;/&lt;code&gt;have_performed_job&lt;/code&gt;/&lt;code&gt;perform_job&lt;/code&gt; ActiveJob
matchers (Isaac Seymour, #1785)&lt;/li&gt;
  &lt;li&gt;Default to generating request specs rather than controller specs when
generating a controller (Luka Lüdicke, #2222)&lt;/li&gt;
  &lt;li&gt;Allow &lt;code&gt;ActiveJob&lt;/code&gt; matchers &lt;code&gt;#on_queue&lt;/code&gt; modifier to take symbolic queue names. (Nils Sommer, #2283)&lt;/li&gt;
  &lt;li&gt;The scaffold generator now generates request specs in preference to controller specs.
(Luka Lüdicke, #2288)&lt;/li&gt;
  &lt;li&gt;Add configuration option to disable ActiveRecord. (Jon Rowe, Phil Pirozhkov, Hermann Mayer, #2266)&lt;/li&gt;
  &lt;li&gt;Set &lt;code&gt;ActionDispatch::SystemTesting::Server.silence_puma = true&lt;/code&gt; when running system specs.
  (ta1kt0me, Benoit Tigeot, #2289)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;EmptyTemplateHandler.call&lt;/code&gt; now needs to support an additional argument in
Rails 6. (Pavel Rosický, #2089)&lt;/li&gt;
  &lt;li&gt;Suppress warning from &lt;code&gt;SQLite3Adapter.represent_boolean_as_integer&lt;/code&gt; which is
deprecated. (Pavel Rosický, #2092)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ActionView::Template#formats&lt;/code&gt; has been deprecated and replaced by
&lt;code&gt;ActionView::Template#format&lt;/code&gt;(Seb Jacobs, #2100)&lt;/li&gt;
  &lt;li&gt;Replace &lt;code&gt;before_teardown&lt;/code&gt; as well as &lt;code&gt;after_teardown&lt;/code&gt; to ensure screenshots
are generated correctly. (Jon Rowe, #2164)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ActionView::FixtureResolver#hash&lt;/code&gt; has been renamed to &lt;code&gt;ActionView::FixtureResolver#data&lt;/code&gt;.
(Penelope Phippen, #2076)&lt;/li&gt;
  &lt;li&gt;Prevent &lt;code&gt;driven_by(:selenium)&lt;/code&gt; being called due to hook precedence.
(Takumi Shotoku, #2188)&lt;/li&gt;
  &lt;li&gt;Prevent a &lt;code&gt;WrongScopeError&lt;/code&gt; being thrown during loading fixtures on Rails
6.1 development version. (Edouard Chin, #2215)&lt;/li&gt;
  &lt;li&gt;Fix Mocha mocking support with &lt;code&gt;should&lt;/code&gt;. (Phil Pirozhkov, #2256)&lt;/li&gt;
  &lt;li&gt;Restore previous conditional check for setting &lt;code&gt;default_url_options&lt;/code&gt; in feature
specs, prevents a &lt;code&gt;NoMethodError&lt;/code&gt; in some scenarios. (Eugene Kenny, #2277)&lt;/li&gt;
  &lt;li&gt;Allow changing &lt;code&gt;ActiveJob::Base.queue_adapter&lt;/code&gt; inside a system spec.
(Jonathan Rochkind, #2242)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rails generate generator&lt;/code&gt; command now creates related spec file (Joel Azemar, #2217)&lt;/li&gt;
  &lt;li&gt;Relax upper &lt;code&gt;capybara&lt;/code&gt; version constraint to allow for Capybara 3.x (Phil Pirozhkov, #2281)&lt;/li&gt;
  &lt;li&gt;Clear ActionMailer test mailbox after each example (Benoit Tigeot, #2293)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Breaking Changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Drops support for Rails below 5.0&lt;/li&gt;
  &lt;li&gt;Drops support for Ruby below 2.2&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  <entry>
    <title>RSpec 3.9 has been released, and RSpec team changes.</title>
    <link rel="alternate" href="http://rspec.info/blog/2019/10/rspec-3-9-has-been-released/"/>
    <id>http://rspec.info/blog/2019/10/rspec-3-9-has-been-released/</id>
    <published>2019-10-16T00:00:00Z</published>
    <updated>2019-10-17T10:11:44+01:00</updated>
    <author>
      <name>Jon Rowe</name>
    </author>
    <content type="html">&lt;p&gt;RSpec 3.9 has just been released! As the RSpec project follows
&lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt;, anyone already using RSpec 3
should be able to upgrade to this version seemlessly, but if we have
introduced a regression please let us know, and we'll get a patch
release out to sort it out as soon as possible.&lt;/p&gt;

&lt;p&gt;We're sad to announce that &lt;a href="https://github.com/samphippen"&gt;Penelope Phippen&lt;/a&gt; has
retired from the project, leaving myself, &lt;a href="https://github.com/jonrowe"&gt;Jon Rowe&lt;/a&gt; as
the sole lead maintainer going forward, but its not all bad news, we welcome our
newest core team member &lt;a href="https://github.com/pirj`"&gt;Phil Pirozhkov&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you Penelope for all your hard word over the years and welcome Phil!&lt;/p&gt;

&lt;p&gt;This is the last release in which the RSpec gems, &lt;code&gt;rspec&lt;/code&gt;, &lt;code&gt;rspec-core&lt;/code&gt;,
&lt;code&gt;rspec-expectations&lt;/code&gt; and &lt;code&gt;rspec-mocks&lt;/code&gt; will be in sync with &lt;code&gt;rspec-rails&lt;/code&gt;.
We'll be launched &lt;code&gt;rspec-rails&lt;/code&gt; 4 soon which will be classed as an extension
gem and not kept in sync version wise with the core gems, which will allow
us to keep &lt;code&gt;rspec-rails&lt;/code&gt; in sync with Rails versions, more on that soon.&lt;/p&gt;

&lt;p&gt;RSpec continues to receive contributions from all over the world, we had
369 commits and 98 merged pull requests from 52 different contributors
who helped make this release happen. Thank you all :)&lt;/p&gt;

&lt;h2 id="notable-changes"&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id="core-improved-error-handling"&gt;Core: Improved error handling&lt;/h3&gt;

&lt;p&gt;If RSpec encounters an error whilst loading support files, it will now
skip loading specs files removing later confusing errors due to the earlier
error(s). Additionally when available &lt;code&gt;did_you_mean&lt;/code&gt; suggestions will be
shown for any &lt;code&gt;LoadError&lt;/code&gt;s that are encountered.&lt;/p&gt;

&lt;h3 id="core-command-line-interface-improvement---example-matches"&gt;Core: Command Line Interface improvement, &lt;code&gt;--example-matches&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;With the release of 3.9 you can now use &lt;code&gt;--example-matches&lt;/code&gt; to filter your
examples via a regular expression, useful if you only know part of an example
name or have specs with a common theme across a number of different files.&lt;/p&gt;

&lt;h3 id="core-new-formatter"&gt;Core: New Formatter&lt;/h3&gt;

&lt;p&gt;In 3.9 you will find a new built in formatter option, the failure list formatter,
which can be used via the command line as &lt;code&gt;--format f&lt;/code&gt; or &lt;code&gt;--format failure_list&lt;/code&gt;,
or via the &lt;code&gt;RSpec::Configuration#formatter&lt;/code&gt; method. This new formatter produces
output in a more minimalist "quick fix" style output.&lt;/p&gt;

&lt;h3 id="expectations-respondtonew"&gt;Expectations: respond_to(:new)&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;respond_to&lt;/code&gt; matcher now special cases &lt;code&gt;:new&lt;/code&gt; and checks &lt;code&gt;:initialize&lt;/code&gt;
if its a standard class method.&lt;/p&gt;

&lt;h3 id="expectations-empty-diff-warning"&gt;Expectations: Empty diff warning&lt;/h3&gt;

&lt;p&gt;Prior to 3.9 when you had matchers that failed but the items under test
produced the same inspect output you'd get a confusing diff were both
sides look the same, we now detect this scenario and issue a warning.&lt;/p&gt;

&lt;h3 id="mocks-improved-thread-safety"&gt;Mocks: Improved thread safety&lt;/h3&gt;

&lt;p&gt;A bonus for people running parralleised specs, 3.9 brings some improvements
to our threaded behaviour by adding mutexes to avoid deadlocking errors.&lt;/p&gt;

&lt;h3 id="rails-railshelperrb-improvements"&gt;Rails: &lt;code&gt;rails_helper.rb&lt;/code&gt; improvements&lt;/h3&gt;

&lt;p&gt;A minor tweak in 3.9 brining the generated &lt;code&gt;rails_helper.rb&lt;/code&gt; inline
with Ruby semantics and using &lt;code&gt;__dir__&lt;/code&gt; rather than &lt;code&gt;__FILE__&lt;/code&gt; on
newer Rubies.&lt;/p&gt;

&lt;h3 id="rails-new-email-matchers"&gt;Rails: New email matchers&lt;/h3&gt;

&lt;p&gt;Add a new &lt;code&gt;have_enqueued_mail&lt;/code&gt; matcher for making it easier to assert
on mailer specific active jobs.&lt;/p&gt;

&lt;h3 id="rails-new-generators"&gt;Rails: New generators&lt;/h3&gt;

&lt;p&gt;Version 3.9 brings a couple of new generator scaffolds, you can now
generate system specs on Rails 5.1 and above, generate specs for generators
and add routes when generating controller specs.&lt;/p&gt;

&lt;h2 id="stats"&gt;Stats:&lt;/h2&gt;

&lt;h3 id="combined"&gt;Combined:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 322&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 59&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;54 contributors&lt;/strong&gt;: Aaron Kromer, Alex Haynes, Alireza Bashiri, Andy Waite,
Benoit Tigeot, Bobby McDonald, Chris, Christophe Bliard, ConSou, David Rodríguez,
Douglas Lovell, Eito Katagiri, Emric, Fred Snyder, Giovanni Kock Bonetti, Grey
Baker, Jack Wink, Jamie English, Joel Lubrano, Jon Rowe, Juanito Fatas, Keiji,
Kevin, Kevin Kuchta, Kieran O'Grady, Kohei Sugi, Laura Paakkinen, Manuel
Schnitzer, Matijs van Zuijlen, Michel Ocon, Myron Marston, Nazar Matus, Nick
LaMuro, OKURA Masafumi, Olle Jonsson, Orien Madgwick, Patrick Boatner, Penelope
Phippen, Pete Johns, Phil Pirozhkov, Philippe Hardardt, Rafe Rosen, Romain Tartière,
Ryan Lue, Sam Joseph, Samuel Williams, Taichi Ishitani, Takumi Kaji,
Thomas Walpole, Tom Grimley, Viktor Fonic, Yoshimi, aymeric-ledorze, 三上大河&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-core"&gt;rspec-core:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 92&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 13&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;22 contributors&lt;/strong&gt;: Alex Haynes, Andy Waite, Benoit Tigeot, Chris, Christophe
Bliard, David Rodríguez, Jon Rowe, Juanito Fatas, Keiji, Matijs van Zuijlen,
Myron Marston, Nick LaMuro, Olle Jonsson, Orien Madgwick, Pete Johns,
Phil Pirozhkov, Philippe Hardardt, Romain Tartière, Sam Joseph, Samuel Williams,
Viktor Fonic, Yoshimi&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-expectations"&gt;rspec-expectations:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 60&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 7&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;15 contributors&lt;/strong&gt;: Benoit Tigeot, Eito Katagiri, Fred Snyder, Jack Wink,
Jamie English, Jon Rowe, Juanito Fatas, Matijs van Zuijlen, Myron Marston,
Nazar Matus, Olle Jonsson, Orien Madgwick, Pete Johns, Phil Pirozhkov,
Taichi Ishitani&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-mocks"&gt;rspec-mocks:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 38&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 2&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 contributors&lt;/strong&gt;: Alireza Bashiri, Benoit Tigeot, Jon Rowe, Juanito Fatas,
Kevin, Matijs van Zuijlen, Myron Marston, Olle Jonsson, Orien Madgwick,
Patrick Boatner&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-rails"&gt;rspec-rails:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 103&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 17&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;27 contributors&lt;/strong&gt;: Aaron Kromer, Benoit Tigeot, Bobby McDonald, ConSou,
Douglas Lovell, Emric, Giovanni Kock Bonetti, Grey Baker, Joel Lubrano, Jon Rowe,
Kevin Kuchta, Kieran O'Grady, Kohei Sugi, Laura Paakkinen, Manuel Schnitzer,
Michel Ocon, Myron Marston, OKURA Masafumi, Olle Jonsson, Orien Madgwick,
Penelope Phippen, Rafe Rosen, Ryan Lue, Takumi Kaji, Thomas Walpole, Tom Grimley,
aymeric-ledorze&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-support"&gt;rspec-support:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 29&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 20&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;4 contributors&lt;/strong&gt;: Benoit Tigeot, Jon Rowe, Myron Marston, 三上大河&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="docs"&gt;Docs&lt;/h2&gt;

&lt;h3 id="api-docs"&gt;API Docs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="/documentation/3.9/rspec-core/"&gt;rspec-core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.9/rspec-expectations/"&gt;rspec-expectations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.9/rspec-mocks/"&gt;rspec-mocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.9/rspec-rails/"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="cucumber-features"&gt;Cucumber Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-core"&gt;rspec-core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-expectations"&gt;rspec-expectations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-mocks"&gt;rspec-mocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-rails"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="release-notes"&gt;Release Notes&lt;/h2&gt;

&lt;h3 id="rspec-core-390"&gt;rspec-core-3.9.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-core/compare/v3.8.2...v3.9.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:
* Improve the handling of errors during loading support files, if a file
  errors before loading specs, RSpec will now skip loading the specs.
  (David Rodríguez, #2568)
* Add support for –example-matches to run examples by regular expression.
  (Sam Joseph, Matt Rider, @okothkongo1, #2586)
* Add &lt;code&gt;did_you_mean&lt;/code&gt; suggestions for file names encountering a &lt;code&gt;LoadError&lt;/code&gt;
  outside of examples. (@obromios, #2601)
* Add a minimalist quick fix style formatter, only outputs failures as
  &lt;code&gt;file:line:message&lt;/code&gt;. (Romain Tartière, #2614)
* Convert string number values to integer when used for &lt;code&gt;RSpec::Configuration#fail_fast&lt;/code&gt;
  (Viktor Fonic, #2634)
* Issue warning when invalid values are used for &lt;code&gt;RSpec::Configuration#fail_fast&lt;/code&gt;
  (Viktor Fonic, #2634)
* Add support for running the Rake task in a clean environment.
  (Jon Rowe, #2632)
* Indent messages by there example group / example in the documentation formatter.
  (Samuel Williams, #2649)&lt;/p&gt;

&lt;h3 id="rspec-expectations-390"&gt;rspec-expectations-3.9.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-expectations/compare/v3.8.5...v3.9.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code&gt;respond_to&lt;/code&gt; matcher now uses the signature from &lt;code&gt;initialize&lt;/code&gt; to validate checks
for &lt;code&gt;new&lt;/code&gt; (unless &lt;code&gt;new&lt;/code&gt; is non standard). (Jon Rowe, #1072)&lt;/li&gt;
  &lt;li&gt;Generated descriptions for matchers now use &lt;code&gt;is expected to&lt;/code&gt; rather than &lt;code&gt;should&lt;/code&gt; in
line with our preferred DSL. (Pete Johns, #1080, rspec/rspec-core#2572)&lt;/li&gt;
  &lt;li&gt;Add the ability to re-raise expectation errors when matching
with &lt;code&gt;match_when_negated&lt;/code&gt; blocks. (Jon Rowe, #1130)&lt;/li&gt;
  &lt;li&gt;Add a warning when an empty diff is produce due to identical inspect output.
(Benoit Tigeot, #1126)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-mocks-390"&gt;rspec-mocks-3.9.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-mocks/compare/v3.8.2...v3.9.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve thread safety of message expectations by using Mutex to prevent
deadlocking errors. (Ry Biesemeyer, #1236)&lt;/li&gt;
  &lt;li&gt;Add the ability to use &lt;code&gt;time&lt;/code&gt; as an alias for &lt;code&gt;times&lt;/code&gt;. For example:
&lt;code&gt;expect(Class).to receive(:method).exactly(1).time&lt;/code&gt;.
(Pistos, Benoit Tigeot, #1271)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-rails-390"&gt;rspec-rails-3.9.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-rails/compare/v3.8.2...v3.9.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use &lt;code&gt;__dir__&lt;/code&gt; instead of &lt;code&gt;__FILE__&lt;/code&gt; in generated &lt;code&gt;rails_helper.rb&lt;/code&gt; where
supported. (OKURA Masafumi, #2048)&lt;/li&gt;
  &lt;li&gt;Add &lt;code&gt;have_enqueued&lt;/code&gt; matcher as a "super" matcher to the &lt;code&gt;ActiveJob&lt;/code&gt; matchers
making it easier to match on &lt;code&gt;ActiveJob&lt;/code&gt; delivered emails. (Joel Lubrano, #2047)&lt;/li&gt;
  &lt;li&gt;Add generator for system specs on Rails 5.1 and above. (Andrzej Sliwa, #1933)&lt;/li&gt;
  &lt;li&gt;Add generator for generator specs. (@ConSou, #2085)&lt;/li&gt;
  &lt;li&gt;Add option to generate routes when generating controller specs. (David Revelo, #2134)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make the &lt;code&gt;ActiveJob&lt;/code&gt; matchers fail when multiple jobs are queued for negated
matches. e.g. `expect { job; job; }.to_not have_enqueued_job.
(Emric Istanful, #2069)&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Jon Rowe and Sam Phippen are RSpec's new leads</title>
    <link rel="alternate" href="http://rspec.info/blog/2018/09/jon-rowe-and-sam-phippen-are-rspecs-new-leads/"/>
    <id>http://rspec.info/blog/2018/09/jon-rowe-and-sam-phippen-are-rspecs-new-leads/</id>
    <published>2018-09-23T00:00:00Z</published>
    <updated>2019-10-17T10:11:44+01:00</updated>
    <author>
      <name>Myron Marston</name>
    </author>
    <content type="html">&lt;p&gt;My &lt;a href="https://github.com/rspec/rspec-core/commit/cbd5a8a26885106e0483d189e9d39d80d58f7f77"&gt;first contribution to
RSpec&lt;/a&gt;
happened over 8 years ago, and I've &lt;a href="http://blog.davidchelimsky.net/blog/2012/11/28/myron-marston-and-andy-lindeman-are-rspecs-new-project-leads/"&gt;lead the project for nearly 6
years&lt;/a&gt;.
In that time, a lot has been accomplished:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We shipped a dozen major or minor feature releases (plus
&lt;a href="https://rubygems.org/gems/rspec-core/versions"&gt;many&lt;/a&gt;,
&lt;a href="https://rubygems.org/gems/rspec-expectations/versions"&gt;many&lt;/a&gt;
&lt;a href="https://rubygems.org/gems/rspec-mocks/versions"&gt;patch&lt;/a&gt;
&lt;a href="https://rubygems.org/gems/rspec-rails/versions"&gt;releases&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;We added some of RSpec's most popular features (like &lt;a href="/blog/2014/01/new-in-rspec-3-composable-matchers/"&gt;composable
matchers&lt;/a&gt;,
&lt;a href="https://rhnh.net/2013/12/10/new-in-rspec-3-verifying-doubles/"&gt;verifying doubles&lt;/a&gt;, and
&lt;a href="/blog/2015/06/rspec-3-3-has-been-released/#core-bisect"&gt;&lt;code&gt;--bisect&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;I co-authored &lt;a href="https://pragprog.com/book/rspec3/effective-testing-with-rspec-3"&gt;a book about using RSpec
effectively&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RSpec became &lt;a href="https://rubygems.org/stats"&gt;the most popular Ruby gem&lt;/a&gt; with over 300 million downloads&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During that time, my life has also changed significantly:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I changed employers from &lt;a href="https://moz.com/"&gt;Moz&lt;/a&gt; to &lt;a href="https://squareup.com/"&gt;Square&lt;/a&gt; last year&lt;/li&gt;
  &lt;li&gt;I stopped using Ruby as my primary language about 3 years ago (at Moz we switched to
&lt;a href="https://elixir-lang.org/"&gt;Elixir&lt;/a&gt; and my team at Square is using Java)&lt;/li&gt;
  &lt;li&gt;I have 3 kids now (when I started working on RSpec I didn't have any!)&lt;/li&gt;
  &lt;li&gt;I no longer have the kind of time I used to to work on open source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As much as I have enjoyed working on RSpec for the better part of a decade, I
rarely have the time anymore, and when I do have the time, I often don't enjoy it.
I'm also no longer a regular user of RSpec.&lt;/p&gt;

&lt;p&gt;In short, the time has come for me to take a step back from the project.
Effective immediately, Jon Rowe and Sam Phippen are the new co-leads of
RSpec. Both of them have been contributing to RSpec for years and I have
every confidence they will lead the project well.&lt;/p&gt;

&lt;p&gt;Please join me in thanking Jon and Sam for stepping forward to lead the
project!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>RSpec 3.8 has been released!</title>
    <link rel="alternate" href="http://rspec.info/blog/2018/08/rspec-3-8-has-been-released/"/>
    <id>http://rspec.info/blog/2018/08/rspec-3-8-has-been-released/</id>
    <published>2018-08-04T00:00:00Z</published>
    <updated>2019-10-17T10:11:44+01:00</updated>
    <author>
      <name>Myron Marston and Jon Rowe</name>
    </author>
    <content type="html">&lt;p&gt;RSpec 3.8 has just been released! Given our commitment to
&lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt;, this should be an easy
upgrade for anyone already using RSpec 3, but if we did introduce
any regressions, please let us know, and we'll get a patch release
out with a fix ASAP.&lt;/p&gt;

&lt;p&gt;We're also happy to announce that &lt;a href="https://github.com/benoittgt"&gt;Benoit Tigeot&lt;/a&gt;
has joined the RSpec team since the last release. Welcome to the team, Benoit!
We know you'll do great things :).&lt;/p&gt;

&lt;p&gt;RSpec continues to be a community-driven project with contributors
from all over the world. This release includes 369 commits and 98
merged pull requests from 52 different contributors!&lt;/p&gt;

&lt;p&gt;Thank you to everyone who helped make this release happen!&lt;/p&gt;

&lt;h2 id="notable-changes"&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id="core-performance-of---bisect-has-been-significantly-improved"&gt;Core: Performance of –bisect has been significantly improved&lt;/h3&gt;

&lt;p&gt;RSpec has supported a &lt;code&gt;--bisect&lt;/code&gt; feature since
&lt;a href="/blog/2015/06/rspec-3-3-has-been-released/#core-bisect"&gt;RSpec 3.3&lt;/a&gt;.
This feature is useful when your test suite has an ordering
dependency–that is, the suite only fails when the tests are run
in a specific order. &lt;code&gt;--bisect&lt;/code&gt; will repeatedly run smaller and
smaller subsets of your suite in order to narrow it down to the
minimal set of specs needed to reproduce the failures.&lt;/p&gt;

&lt;p&gt;Since 3.3, this feature has been implemented by shelling out to
the &lt;code&gt;rspec&lt;/code&gt; command to run each subset. While simple and effective,
we realized this approach was also quite inefficient. Each time the
&lt;code&gt;rspec&lt;/code&gt; command runs, it must boot RSpec and your application
environment (which may include Rails and many other gems) from scratch.
The cost of this can vary considerably from a couple hundred milliseconds
to 30+ seconds on a large Rails app. In extreme cases, the runtime of
&lt;code&gt;--bisect&lt;/code&gt; can be dominated by the time it takes to boot your application
environment over and over and over.&lt;/p&gt;

&lt;p&gt;In RSpec 3.8, we've improved bisect's performance by using forking
on platforms that support it rather than shelling out. That way, we
can boot your application environment &lt;em&gt;once&lt;/em&gt;, and then fork a subprocess
in which to run each subset of the test suite, avoiding the need to boot
your application many times.&lt;/p&gt;

&lt;p&gt;The actual improvement you'll see in practice will vary widely, but
in our &lt;a href="https://github.com/rspec/rspec-core/pull/2511"&gt;limited testing&lt;/a&gt;
it improved the runtime of &lt;code&gt;--bisect&lt;/code&gt; by 33% in one case and an
order-of-magnitude (108.9 seconds down to 11.7 seconds) in another.&lt;/p&gt;

&lt;p&gt;If you're looking to maximize the benefit of this change, you may
want to pass some additional &lt;code&gt;--require&lt;/code&gt; options when running a
bisection in order to pre-load as much of your application environment
as possible.&lt;/p&gt;

&lt;h3 id="core-support-the-xdg-base-directory-spec-for-configuration"&gt;Core: Support the XDG base directory spec for configuration&lt;/h3&gt;

&lt;p&gt;RSpec, like many command line tools, supports the use of options
files, which can live at &lt;code&gt;.rspec&lt;/code&gt; (for team project options)
&lt;code&gt;~/.rspec&lt;/code&gt; (for global personal options) or at &lt;code&gt;.rspec-local&lt;/code&gt;
(for personal project options – this file should not be under
source control). In RSpec 3.8, we've expanded this feature to
support the &lt;a href="https://specifications.freedesktop.org/basedir-spec/latest/"&gt;XDG Base Directory
Specification&lt;/a&gt;,
which defines a standard way for tools to locate the global personal
options file. This gives users complete control over where this
file is located rather than forcing it to live in their home directory.&lt;/p&gt;

&lt;p&gt;To use this feature, simply set the &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; environment
variable and put your RSpec options at &lt;code&gt;$XDG_CONFIG_HOME/rspec/options&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For more info, &lt;a href="https://specifications.freedesktop.org/basedir-spec/latest/"&gt;read the spec&lt;/a&gt;
or &lt;a href="https://github.com/rspec/rspec-core/pull/2538"&gt;check out the pull
request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to Magnus Bergmark for implementing this feature!&lt;/p&gt;

&lt;h3 id="expectations-formatted-output-length-is-now-configurable"&gt;Expectations: Formatted output length is now configurable&lt;/h3&gt;

&lt;p&gt;When setting expectations on large objects their string representations can become
rather unwieldy and can clutter the console output. In RSpec 3.6, we started
truncating these objects to address this issue, but did not make it easily configurable.&lt;/p&gt;

&lt;p&gt;In RSpec 3.8, you can now configure it:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expect_with&lt;/span&gt; &lt;span class="ss"&gt;:rspec&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;expectations&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;expectations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;max_formatted_output_length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also disable the truncation entirely by setting the config option to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="rails--havehttpstatus-matcher-upgraded-to-support-rails-52"&gt;Rails:  &lt;code&gt;have_http_status&lt;/code&gt; matcher upgraded to support Rails 5.2&lt;/h3&gt;

&lt;p&gt;A change in Rails 5.2 caused RSpec's &lt;code&gt;have_http_status&lt;/code&gt; matcher to issue deprecation
warnings. In RSpec 3.8, these warnings have been removed.&lt;/p&gt;

&lt;h3 id="rails-view-specs-stubtemplate-performance-improved"&gt;Rails: View specs &lt;code&gt;stub_template&lt;/code&gt; performance improved.&lt;/h3&gt;

&lt;p&gt;Thanks to Simon Coffey for implementing caching for &lt;code&gt;stub_template&lt;/code&gt;
that prevents unnecessary recreation of templates. This improves performance
by reducing the amount of allocation and setup performed.&lt;/p&gt;

&lt;h3 id="rails-railshelperrb-improvements"&gt;Rails: &lt;code&gt;rails_helper.rb&lt;/code&gt; improvements&lt;/h3&gt;

&lt;p&gt;Thank you to Koichi ITO and Alessandro Rodi for improving our generated
&lt;code&gt;rails_helper.rb&lt;/code&gt; with improved messages when migrations are pending,
and bringing us in line with Rails standards.&lt;/p&gt;

&lt;h2 id="stats"&gt;Stats:&lt;/h2&gt;

&lt;h3 id="combined"&gt;Combined:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 369&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 98&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;52 contributors&lt;/strong&gt;: Ace Dimasuhid, Alessandro Rodi, Alexander
Panasyuk, Alyssa Ross, Andrew, Andrew Vit, Benoit Tigeot, Brad Charna,
Brian Kephart, Christophe Bliard, Craig J. Bass, Daniel Colson, Douglas
Lovell, Eric Hayes, Garett Arrowood, Gary Bernhardt, Gustav Munkby,
James Crisp, Joel Taylor, Jon Rowe, Kenichi Kamiya, Koichi ITO, Lairan,
Laura Paakkinen, Laurent Cobos, Magnus Bergmark, Matt Brictson, Maxim
Krizhanovsky, Myron Marston, Nikola Đuza, Oleg Pudeyev, Olivier Lacan,
Olle Jonsson, Pablo Brasero, Paul McMahon, Regan Chan, Sam Phippen,
Sergiy Yarinovskiy, Shane Cavanaugh, Shia, Simon Coffey, Sorah Fukumori,
Systho, Szijjártó-Nagy Misu, Tom Chen, Xavier Shay, Yuji Nakayama,
arjan0307, joker1007, lsarni, n.epifanov, pavel&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-core"&gt;rspec-core:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 94&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 24&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;17 contributors&lt;/strong&gt;: Alyssa Ross, Andrew Vit, Benoit Tigeot, Garett
Arrowood, Gary Bernhardt, Jon Rowe, Kenichi Kamiya, Koichi ITO, Magnus
Bergmark, Myron Marston, Oleg Pudeyev, Olle Jonsson, Sam Phippen, Sorah
Fukumori, Systho, Xavier Shay, arjan0307&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-expectations"&gt;rspec-expectations:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 52&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 15&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;13 contributors&lt;/strong&gt;: Ace Dimasuhid, Alyssa Ross, Benoit Tigeot, James
Crisp, Jon Rowe, Kenichi Kamiya, Myron Marston, Pablo Brasero, Sam
Phippen, Xavier Shay, Yuji Nakayama, joker1007, n.epifanov&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-mocks"&gt;rspec-mocks:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 47&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 16&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;13 contributors&lt;/strong&gt;: Alexander Panasyuk, Alyssa Ross, Andrew, Benoit
Tigeot, James Crisp, Jon Rowe, Kenichi Kamiya, Maxim Krizhanovsky, Myron
Marston, Olle Jonsson, Sam Phippen, Sergiy Yarinovskiy, Xavier Shay&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-rails"&gt;rspec-rails:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 132&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 27&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;29 contributors&lt;/strong&gt;: Alessandro Rodi, Benoit Tigeot, Brad Charna,
Brian Kephart, Christophe Bliard, Daniel Colson, Douglas Lovell, Eric
Hayes, Joel Taylor, Jon Rowe, Kenichi Kamiya, Koichi ITO, Lairan, Laura
Paakkinen, Laurent Cobos, Matt Brictson, Myron Marston, Nikola Đuza,
Olivier Lacan, Paul McMahon, Regan Chan, Sam Phippen, Shane Cavanaugh,
Shia, Simon Coffey, Szijjártó-Nagy Misu, Tom Chen, lsarni, pavel&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-support"&gt;rspec-support:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 44&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 16&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 contributors&lt;/strong&gt;: Alyssa Ross, Benoit Tigeot, Craig J. Bass, Gustav
Munkby, James Crisp, Jon Rowe, Kenichi Kamiya, Myron Marston, Sam
Phippen, Xavier Shay&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="docs"&gt;Docs&lt;/h2&gt;

&lt;h3 id="api-docs"&gt;API Docs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="/documentation/3.8/rspec-core/"&gt;rspec-core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.8/rspec-expectations/"&gt;rspec-expectations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.8/rspec-mocks/"&gt;rspec-mocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.8/rspec-rails/"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="cucumber-features"&gt;Cucumber Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-core"&gt;rspec-core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-expectations"&gt;rspec-expectations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-mocks"&gt;rspec-mocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-rails"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="release-notes"&gt;Release Notes&lt;/h2&gt;

&lt;h3 id="rspec-core-380"&gt;rspec-core-3.8.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-core/compare/v3.7.1...v3.8.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve shell escaping used by &lt;code&gt;RSpec::Core::RakeTask&lt;/code&gt; and &lt;code&gt;--bisect&lt;/code&gt; so
that it works on &lt;code&gt;Pathname&lt;/code&gt; objects. (Andrew Vit, #2479)&lt;/li&gt;
  &lt;li&gt;Nicely format errors encountered while loading files specified
by &lt;code&gt;--require&lt;/code&gt; option.  (Myron Marston, #2504)&lt;/li&gt;
  &lt;li&gt;Significantly improve the performance of &lt;code&gt;--bisect&lt;/code&gt; on platforms that
support forking by replacing the shell-based runner with one that uses
forking so that RSpec and the application environment can be booted only
once, instead of once per spec run. (Myron Marston, #2511)&lt;/li&gt;
  &lt;li&gt;Provide a configuration API to pick which bisect runner is used for
&lt;code&gt;--bisect&lt;/code&gt;. Pick a runner via &lt;code&gt;config.bisect_runner = :shell&lt;/code&gt; or
&lt;code&gt;config.bisect_runner = :fork&lt;/code&gt; in a file loaded by a &lt;code&gt;--require&lt;/code&gt;
option passed at the command line or set in &lt;code&gt;.rspec&lt;/code&gt;. (Myron Marston, #2511)&lt;/li&gt;
  &lt;li&gt;Support the &lt;a href="https://specifications.freedesktop.org/basedir-spec/latest/"&gt;XDG Base Directory
Specification&lt;/a&gt;
for the global options file. &lt;code&gt;~/.rspec&lt;/code&gt; is still supported when no
options file is found in &lt;code&gt;$XDG_CONFIG_HOME/rspec/options&lt;/code&gt; (Magnus Bergmark, #2538)&lt;/li&gt;
  &lt;li&gt;Extract &lt;code&gt;RSpec.world.prepare_example_filtering&lt;/code&gt; that sets up the
example filtering for custom RSpec runners. (Oleg Pudeyev, #2552)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Prevent an &lt;code&gt;ArgumentError&lt;/code&gt; when truncating backtraces with two identical
backtraces. (Systho, #2515, Benoit Tigeot, #2539)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-expectations-380"&gt;rspec-expectations-3.8.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-expectations/compare/v3.7.0...v3.8.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve failure message of &lt;code&gt;change(receiver, :message)&lt;/code&gt; by including the
receiver as &lt;code&gt;SomeClass#some_message&lt;/code&gt;. (Tomohiro Hashidate, #1005)&lt;/li&gt;
  &lt;li&gt;Improve &lt;code&gt;change&lt;/code&gt; matcher so that it can correctly detect changes in
deeply nested mutable objects (such as arrays-of-hashes-of-arrays).
The improved logic uses the before/after &lt;code&gt;hash&lt;/code&gt; value to see if the
object has been mutated, rather than shallow duping the object.
(Myron Marston, #1034)&lt;/li&gt;
  &lt;li&gt;Improve &lt;code&gt;include&lt;/code&gt; matcher so that pseudo-hash objects (e.g. objects
that decorate a hash using a &lt;code&gt;SimpleDelegator&lt;/code&gt; or similar) are treated
as a hash, as long as they implement &lt;code&gt;to_hash&lt;/code&gt;. (Pablo Brasero, #1012)&lt;/li&gt;
  &lt;li&gt;Add &lt;code&gt;max_formatted_output_length=&lt;/code&gt; to configuration, allowing changing
the length at which we truncate large output strings.
(Sam Phippen #951, Benoit Tigeot #1056)&lt;/li&gt;
  &lt;li&gt;Improve error message when passing a matcher that doesn't support block
expectations to a block based &lt;code&gt;expect&lt;/code&gt;. (@nicktime, #1066)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-mocks-380"&gt;rspec-mocks-3.8.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-mocks/compare/v3.7.0...v3.8.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Issue error when encountering invalid "counted" negative message expectations.
(Sergiy Yarinovskiy, #1212)&lt;/li&gt;
  &lt;li&gt;Ensure &lt;code&gt;allow_any_instance_of&lt;/code&gt; and &lt;code&gt;expect_any_instance_of&lt;/code&gt; can be temporarily
supressed. (Jon Rowe, #1228)&lt;/li&gt;
  &lt;li&gt;Ensure &lt;code&gt;expect_any_instance_of(double).to_not have_received(:some_method)&lt;/code&gt;
fails gracefully (as its not supported) rather than issuing a &lt;code&gt;NoMethodError&lt;/code&gt;.
(Maxim Krizhanovsky, #1231)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-rails-380"&gt;rspec-rails-3.8.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-rails/compare/v3.7.2...v3.8.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improved message when migrations are pending in the default &lt;code&gt;rails_helper.rb&lt;/code&gt;
(Koichi ITO, #1924)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;have_http_status&lt;/code&gt; matcher now supports Rails 5.2 style response symbols
(Douglas Lovell, #1951)&lt;/li&gt;
  &lt;li&gt;Change generated Rails helper to match Rails standards for Rails.root
(Alessandro Rodi, #1960)&lt;/li&gt;
  &lt;li&gt;At support for asserting enqueued jobs have no wait period attached.
(Brad Charna, #1977)&lt;/li&gt;
  &lt;li&gt;Cache instances of &lt;code&gt;ActionView::Template&lt;/code&gt; used in &lt;code&gt;stub_template&lt;/code&gt; resulting
in increased performance due to less allocations and setup. (Simon Coffey, #1979)&lt;/li&gt;
  &lt;li&gt;Rails scaffold generator now respects longer namespaces (e.g. api/v1/&amp;lt;thing&amp;gt;).
(Laura Paakkinen, #1958)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Escape quotation characters when producing method names for system spec
screenshots. (Shane Cavanaugh, #1955)&lt;/li&gt;
  &lt;li&gt;Use relative path for resolving fixtures when &lt;code&gt;fixture_path&lt;/code&gt; is not set.
(Laurent Cobos, #1943)&lt;/li&gt;
  &lt;li&gt;Allow custom template resolvers in view specs. (@ahorek, #1941)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-support-380"&gt;rspec-support-3.8.0&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-support/compare/v3.7.1...v3.8.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Order hash keys before diffing to improve diff accuracy when using mocked calls.
(James Crisp, #334)&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  <entry>
    <title>RSpec 3.7 has been released!</title>
    <link rel="alternate" href="http://rspec.info/blog/2017/10/rspec-3-7-has-been-released/"/>
    <id>http://rspec.info/blog/2017/10/rspec-3-7-has-been-released/</id>
    <published>2017-10-17T00:00:00Z</published>
    <updated>2019-10-17T10:11:44+01:00</updated>
    <author>
      <name>Sam Phippen</name>
    </author>
    <content type="html">&lt;p&gt;RSpec 3.7 has just been released! Given our commitment to
&lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt;, this should be an easy
upgrade for anyone already using RSpec 3, but if we did introduce
any regressions, please let us know, and we'll get a patch release
out with a fix ASAP.&lt;/p&gt;

&lt;p&gt;RSpec continues to be a community-driven project with contributors
from all over the world. This release includes over 127 commits and 31
merged pull requests from 27 different contributors!&lt;/p&gt;

&lt;p&gt;It's worth noting: this is a smaller release than usual, as we wanted to get our
Rails System Testing integration to you as quickly as possible.&lt;/p&gt;

&lt;p&gt;Thank you to everyone who helped make this release happen!&lt;/p&gt;

&lt;h2 id="notable-changes"&gt;Notable Changes&lt;/h2&gt;

&lt;h3 id="rails-actiondispatchsystemtest-integration-system-specs"&gt;Rails: &lt;code&gt;ActionDispatch::SystemTest&lt;/code&gt; integration (System specs)&lt;/h3&gt;

&lt;p&gt;In Rails 5.1, a new kind of test was added, called system test. These tests wrap
capybara and Rails to allow for a full stack testing experience from frontend
javascript all the way down to your database.&lt;/p&gt;

&lt;p&gt;For a long time, RSpec has had &lt;a href="https://relishapp.com/rspec/rspec-rails/docs/feature-specs/feature-spec"&gt;Feature Specs&lt;/a&gt;
which provide a smiliar integration. There are a few important differences
between feature specs and system specs that are worth enumerating:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If you use a javascript enabled driver (like selenium or poltergeist) with
feature specs your tests run in a different &lt;strong&gt;process&lt;/strong&gt; than your Rails app.
This means that your tests and your code under test cannot share a database
transaction, and so you cannot use RSpec's built in mechanism to roll back
database changes, instead requiring a gem like &lt;a href="https://github.com/DatabaseCleaner/database_cleaner"&gt;database
cleaner&lt;/a&gt;. With system
tests, the Rails team has done the hard work to ensure that this is not the
case, and so you can safely use RSpec's mechanism, without needing an extra
gem.&lt;/li&gt;
  &lt;li&gt;RSpec's feature specs defaults to using the &lt;code&gt;Rack::Test&lt;/code&gt; capybara driver. If
you want to use a javascript enabled test browser, it is on you to manage the
capybara configuration. For a long time this has proven to be something that
is tricky to get correct with more advanced integrations like selenium.
System specs default to using selenium. The difficulty of the configuration
is hidden by rails, which manipulates capybara and webdriver with chrome on
your behalf.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As such, we are recommending that users on Rails 5.1 prefer writing system specs
over feature specs for full application integration testing. We'd like to give a
special thanks to &lt;a href="https://twitter.com/eileencodes"&gt;Eileen Uchitelle&lt;/a&gt; who lead
the implementation of this feature in Rails.&lt;/p&gt;

&lt;h2 id="stats"&gt;Stats:&lt;/h2&gt;

&lt;h3 id="combined"&gt;Combined:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 127&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 31&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;27 contributors&lt;/strong&gt;: Aaron Rosenberg, Alex Shi, Alyssa Ross, Britni Alexander, Dave Woodall, Devon Estes, Hisashi Kamezawa, Ian Ker-Seymer, James Adam, Jim Kingdon, Jon Rowe, Levi Robertson, Myron Marston, Pat Allan, RustyNail, Ryan Lue, Sam Phippen, Samuel Cochran, Sergei Trofimovich, Takeshi Arabiki, Thomas Hart, Tobias Pfeiffer, Wojciech Wnętrzak, Xavier Shay, Yuji Nakayama, Zhong Zheng, oh_rusty_nail&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-core"&gt;rspec-core:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 40&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 10&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;11 contributors&lt;/strong&gt;: Devon Estes, Ian Ker-Seymer, Jon Rowe, Levi Robertson, Myron Marston, Pat Allan, Sam Phippen, Takeshi Arabiki, Thomas Hart, Tobias Pfeiffer, Yuji Nakayama&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-expectations"&gt;rspec-expectations:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 13&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 2&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;5 contributors&lt;/strong&gt;: Jim Kingdon, Myron Marston, Pat Allan, Sam Phippen, Yuji Nakayama&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-mocks"&gt;rspec-mocks:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 14&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 2&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;6 contributors&lt;/strong&gt;: Aaron Rosenberg, Myron Marston, Pat Allan, Sam Phippen, Yuji Nakayama, Zhong Zheng&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-rails"&gt;rspec-rails:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 38&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 9&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;16 contributors&lt;/strong&gt;: Alex Shi, Alyssa Ross, Britni Alexander, Dave Woodall, Hisashi Kamezawa, James Adam, Jon Rowe, Myron Marston, RustyNail, Ryan Lue, Sam Phippen, Samuel Cochran, Wojciech Wnętrzak, Xavier Shay, Yuji Nakayama, oh_rusty_nail&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-support"&gt;rspec-support:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Total Commits&lt;/strong&gt;: 22&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Merged pull requests&lt;/strong&gt;: 8&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;6 contributors&lt;/strong&gt;: Jon Rowe, Myron Marston, Pat Allan, Sam Phippen, Sergei Trofimovich, Yuji Nakayama&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="docs"&gt;Docs&lt;/h2&gt;

&lt;h3 id="api-docs"&gt;API Docs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="/documentation/3.7/rspec-core/"&gt;rspec-core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.7/rspec-expectations/"&gt;rspec-expectations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.7/rspec-mocks/"&gt;rspec-mocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/documentation/3.7/rspec-rails/"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="cucumber-features"&gt;Cucumber Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-core"&gt;rspec-core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-expectations"&gt;rspec-expectations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-mocks"&gt;rspec-mocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://relishapp.com/rspec/rspec-rails"&gt;rspec-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="release-notes"&gt;Release notes:&lt;/h2&gt;

&lt;h3 id="rspec-core-1"&gt;RSpec Core&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-core/compare/v3.6.0...v3.7.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code&gt;-n&lt;/code&gt; alias for &lt;code&gt;--next-failure&lt;/code&gt;. (Ian Ker-Seymer, #2434)&lt;/li&gt;
  &lt;li&gt;Improve compatibility with &lt;code&gt;--enable-frozen-string-literal&lt;/code&gt; option
on Ruby 2.3+. (Pat Allan, #2425, #2427, #2437)&lt;/li&gt;
  &lt;li&gt;Do not run &lt;code&gt;:context&lt;/code&gt; hooks for example groups that have been skipped.
(Devon Estes, #2442)&lt;/li&gt;
  &lt;li&gt;Add &lt;code&gt;errors_outside_of_examples_count&lt;/code&gt; to the JSON formatter.
(Takeshi Arabiki, #2448)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve compatibility with frozen string literal flag. (#2425, Pat Allan)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="rspec-expectations-1"&gt;RSpec Expectations&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-expectations/compare/v3.6.0...v3.7.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve compatibility with &lt;code&gt;--enable-frozen-string-literal&lt;/code&gt; option
on Ruby 2.3+. (Pat Allan, #997)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="rspec-mocks-1"&gt;RSpec Mocks&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-mocks/compare/v3.6.0...v3.7.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve compatibility with &lt;code&gt;--enable-frozen-string-literal&lt;/code&gt; option
on Ruby 2.3+. (Pat Allan, #1165)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix &lt;code&gt;hash_including&lt;/code&gt; and &lt;code&gt;hash_excluding&lt;/code&gt; so that they work against
subclasses of &lt;code&gt;Hash&lt;/code&gt;. (Aaron Rosenberg, #1167)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="rspec-rails-1"&gt;RSpec Rails&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-rails/compare/v3.6.0...v3.7.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Prevent "template not rendered" log message from erroring in threaded
environments. (Samuel Cochran, #1831)&lt;/li&gt;
  &lt;li&gt;Correctly generate job name in error message. (Wojciech Wnętrzak, #1814)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Allow &lt;code&gt;be_a_new(...).with(...)&lt;/code&gt; matcher to accept matchers for
attribute values. (Britni Alexander, #1811)&lt;/li&gt;
  &lt;li&gt;Only configure RSpec Mocks if it is fully loaded. (James Adam, #1856)&lt;/li&gt;
  &lt;li&gt;Integrate with &lt;code&gt;ActionDispatch::SystemTestCase&lt;/code&gt;. (Sam Phippen, #1813)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="rspec-support-1"&gt;RSpec Support&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://github.com/rspec/rspec-support/compare/v3.6.0...v3.7.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhancements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve compatibility with &lt;code&gt;--enable-frozen-string-literal&lt;/code&gt; option
on Ruby 2.3+. (Pat Allan, #320)&lt;/li&gt;
  &lt;li&gt;Add &lt;code&gt;Support.class_of&lt;/code&gt; for extracting class of any object.
(Yuji Nakayama, #325)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix recursive const support to not blow up when given buggy classes
that raise odd errors from &lt;code&gt;#to_str&lt;/code&gt;. (Myron Marston, #317)&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
